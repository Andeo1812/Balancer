# OS choice (deploy: 1 worker)
worker_processes auto;

# Only critical logs to errlog
error_log /var/log/nginx/error.log crit;

events {
    # Fast setup with epoll and multi_accept (aggresive)
    worker_connections 1024;
    use epoll;
    multi_accept off;
}

http {
    upstream backend {
        # Count of connections to retieve on each backend balancing
        least_conn;

        server 212.233.91.185:8080 fail_timeout=10s;
        server 212.233.91.185:8081 fail_timeout=10s;
        server 212.233.91.185:8082 fail_timeout=10s;
        server 212.233.91.185:8083 fail_timeout=10s;
        server 212.233.91.185:8084 fail_timeout=10s;
        server 212.233.91.185:8085 fail_timeout=10s;
        server 212.233.91.185:8086 fail_timeout=10s;
        server 212.233.91.185:8087 fail_timeout=10s;
        server 212.233.91.185:8088 fail_timeout=10s;
        server 212.233.91.185:8089 fail_timeout=10s;
        server 212.233.91.185:8090 fail_timeout=10s;

        server 146.185.209.20 :8080 fail_timeout=10s;
        server 146.185.209.20 :8081 fail_timeout=10s;
        server 146.185.209.20 :8082 fail_timeout=10s;
        server 146.185.209.20 :8083 fail_timeout=10s;
        server 146.185.209.20 :8084 fail_timeout=10s;
        server 146.185.209.20 :8085 fail_timeout=10s;
        server 146.185.209.20 :8086 fail_timeout=10s;
        server 146.185.209.20 :8087 fail_timeout=10s;
        server 146.185.209.20 :8088 fail_timeout=10s;
        server 146.185.209.20 :8089 fail_timeout=10s;
        server 146.185.209.20 :8090 fail_timeout=10s;

        server 146.185.210.159:8080 fail_timeout=10s;
        server 146.185.210.159:8081 fail_timeout=10s;
        server 146.185.210.159:8082 fail_timeout=10s;
        server 146.185.210.159:8083 fail_timeout=10s;
        server 146.185.210.159:8084 fail_timeout=10s;
        server 146.185.210.159:8085 fail_timeout=10s;
        server 146.185.210.159:8086 fail_timeout=10s;
        server 146.185.210.159:8087 fail_timeout=10s;
        server 146.185.210.159:8088 fail_timeout=10s;
        server 146.185.210.159:8089 fail_timeout=10s;
        server 146.185.210.159:8090 fail_timeout=10s;
    }

    # In script to fill postgres, there are aggresive insertion of posts (~100 per request)
    # due to it, we should increase client body buffer to avoid broken pipes.
    client_body_buffer_size 10M;
    client_max_body_size 10M;
    client_header_buffer_size 10M;

    send_timeout 120s;

    server {
        # Some optimization for communication

        keepalive_timeout 30;

        keepalive_requests 100;

        access_log off;

	    sendfile on;

	    tcp_nopush on;
	    tcp_nodelay on;

        listen 80 reuseport;
        server_name gateway;

        location / {
            proxy_pass http://backend;
        }
    }
}